package complaintsViews;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import controllers.ComplaintController;
import models.Complaint;
import utils.CustomizedException;

/**
 *
 * @author Steen
 */
public class GetComplaintsPerUser extends javax.swing.JInternalFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form NewJFrame
     */
    public GetComplaintsPerUser() {
        initComponents();
        addRowsToJTable();
    }
    
    public void addRowsToJTable() {
    	DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//        Grab the returned array list and put it into a variable of type Arraylist
    	  ComplaintController cc = new ComplaintController();
    	 
    		  try {
    			  int user = 1736;
  				ArrayList <Complaint> displayList = cc.getComplaintsPerUser(user);
  				System.out.println("List successfully retrieved!");
  				 Object rowData[] = new Object[8];
  			        for (int i =0; i < displayList.size(); i++ ){
  			            rowData[0] = displayList.get(i).getComplaintID();
  			            rowData[1] = displayList.get(i).getCustID().getUserId();
			            rowData[2] = displayList.get(i).getEmpID() != null?displayList.get(i).getEmpID().getUserId():null;
  			            rowData[3] = displayList.get(i).getCategory();
  			            rowData[4] = displayList.get(i).getComplaint();
  			            rowData[5] = displayList.get(i).getComplaintDate();
  			            rowData[6] = displayList.get(i).getComplaintType();
  			            rowData[7] = displayList.get(i).getComplaintStatus();
  			         
  			            model.addRow(rowData);
  			            
  			           		            
  			        }
  			} catch (CustomizedException e1) {
  				// TODO Auto-generated catch block
  				e1.printStackTrace();
  			}
  			
    	 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTable1.setEnabled(false);
        

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Complaint Id", "Customer Id", "Employee Id", "Complaint Category ", 
                "Complaint ", "Complaint Date", "Complaint Type", "Complaint Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );

        final ResponsePopUp pop = new ResponsePopUp(jTable1);
 
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            		
            		jTable1MouseClicked(evt);
            		
            	    } else if (evt.getButton() == MouseEvent.BUTTON3) {
            		System.out.println("Right mouse click\n");
            			pop.show(evt.getComponent(), evt.getX(), evt.getY());
            	    }
            }
        });
        pack();
    }// </editor-fold>                        

    
    class ResponsePopUp extends JPopupMenu {

		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;

		public  ResponsePopUp(JTable table) {
			JMenuItem item1 = new JMenuItem("Latest response");
			JMenuItem item2 = new JMenuItem("View all responses");
			
			item1.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent arg0) {
					System.out.println("Latest response clicked!\n");
					ResponseDetailsView rdv = new ResponseDetailsView();
					rdv.setVisible(true);
				}
				
			});
			
			item2.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent arg0) {
					System.out.println("View all responses clicked!\n");
					DisplayResponsesView drv = new DisplayResponsesView();
					drv.setVisible(true);
				}
				
			});
			
			add(item1);
			add(new JSeparator());
			add(item2);
		}
    	
    }
    
    
    
    /**
     * @param args the command line arguments
     */

    ComplaintDetailsView cdv = new ComplaintDetailsView();
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                        
    	System.out.println("Row clicked!\n");
    	DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    	try {
//    	int index = model.get
//    	System.out.println("Index:"+index);
//    	String click = (jTable1.getModel().getValueAt(index, 0).toString());
    	
    	
        String compId = model.getValueAt(0, 1).toString();        
        String custId = model.getValueAt(0,1).toString();
        String empId = model.getValueAt(0,2).toString();
        String compCategory = model.getValueAt(0,3).toString();
        String compDetails = model.getValueAt(0,4).toString();
        String compDate = model.getValueAt(0,5).toString();
        String compType = model.getValueAt(0,6).toString();
        String compStatus = model.getValueAt(0,7).toString();
              
        cdv.setVisible(true);
        cdv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        cdv.setLocationRelativeTo(null);
        
        cdv.jTextField1.setText(compId);
        cdv.jTextField2.setText(custId);
        cdv.jTextField3.setText(empId);
        cdv.jTextField4.setText(compCategory);
        cdv.jTextField5.setText(compDate);
        cdv.jTextField6.setText(compType);
        cdv.jTextField7.setText(compStatus);
        cdv.jTextArea1.setText(compDetails);
        
    	} catch (Exception e) {
    		JOptionPane.showMessageDialog(null, e);
    	}
    }  
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayAllComplaintsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayAllComplaintsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayAllComplaintsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayAllComplaintsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GetComplaintsPerUser().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
